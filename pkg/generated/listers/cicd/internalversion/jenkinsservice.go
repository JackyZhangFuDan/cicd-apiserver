/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package internalversion

import (
	cicd "cicd-apiserver/pkg/apis/cicd"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// JenkinsServiceLister helps list JenkinsServices.
// All objects returned here must be treated as read-only.
type JenkinsServiceLister interface {
	// List lists all JenkinsServices in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*cicd.JenkinsService, err error)
	// JenkinsServices returns an object that can list and get JenkinsServices.
	JenkinsServices(namespace string) JenkinsServiceNamespaceLister
	JenkinsServiceListerExpansion
}

// jenkinsServiceLister implements the JenkinsServiceLister interface.
type jenkinsServiceLister struct {
	indexer cache.Indexer
}

// NewJenkinsServiceLister returns a new JenkinsServiceLister.
func NewJenkinsServiceLister(indexer cache.Indexer) JenkinsServiceLister {
	return &jenkinsServiceLister{indexer: indexer}
}

// List lists all JenkinsServices in the indexer.
func (s *jenkinsServiceLister) List(selector labels.Selector) (ret []*cicd.JenkinsService, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*cicd.JenkinsService))
	})
	return ret, err
}

// JenkinsServices returns an object that can list and get JenkinsServices.
func (s *jenkinsServiceLister) JenkinsServices(namespace string) JenkinsServiceNamespaceLister {
	return jenkinsServiceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// JenkinsServiceNamespaceLister helps list and get JenkinsServices.
// All objects returned here must be treated as read-only.
type JenkinsServiceNamespaceLister interface {
	// List lists all JenkinsServices in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*cicd.JenkinsService, err error)
	// Get retrieves the JenkinsService from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*cicd.JenkinsService, error)
	JenkinsServiceNamespaceListerExpansion
}

// jenkinsServiceNamespaceLister implements the JenkinsServiceNamespaceLister
// interface.
type jenkinsServiceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all JenkinsServices in the indexer for a given namespace.
func (s jenkinsServiceNamespaceLister) List(selector labels.Selector) (ret []*cicd.JenkinsService, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*cicd.JenkinsService))
	})
	return ret, err
}

// Get retrieves the JenkinsService from the indexer for a given namespace and name.
func (s jenkinsServiceNamespaceLister) Get(name string) (*cicd.JenkinsService, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(cicd.Resource("jenkinsservice"), name)
	}
	return obj.(*cicd.JenkinsService), nil
}
